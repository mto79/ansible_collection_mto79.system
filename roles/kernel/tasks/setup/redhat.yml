---
- name: "Setup | List all installed kernels"
  ansible.builtin.command: "rpm -q kernel"
  register: "_system_kernel_setup_installed_kernels"
  changed_when: false
  tags: "skip_ansible_lint"

- name: "Setup | Determine the latest kernel version"
  ansible.builtin.set_fact:
    _system_kernel_setup_latest_kernel: "{{ _system_kernel_setup_installed_kernels.stdout_lines | sort | last }}"

- name: "Setup | Display the latest kernel version and current kernel version"
  ansible.builtin.debug:
    msg: |
      "Latest kernel version: {{ _system_kernel_setup_latest_kernel }}
      Current kernel version: {{ ansible_kernel }}"

- name: "Setup | Include build tasks."
  ansible.builtin.include_tasks: "build.yml"
  when: "system_kernel_setup_build | bool"

- name: "Setup | Set installonly_limit in /etc/dnf/dnf.conf"
  ansible.builtin.lineinfile:
    path: "/etc/dnf/dnf.conf"
    regexp: "^installonly_limit="
    line: "installonly_limit={{ system_kernel_setup_installonly_limit }}"
    state: "present"
  notify:
    - "Restart dnf"

- name: "Setup | Keep only one kernel"
  ansible.builtin.include_tasks: "one_kernel.yml"
  when: "system_kernel_setup_keep_one_kernel | bool"

- name: "Setup | Manage grub."
  become: true
  block:

    - name: "Setup | Disable Transparent Hugepages on all kernels"
      ansible.builtin.command: >
        "grubby --update-kernel=/boot/vmlinuz-{{ _system_kernel_setup_latest_kernel | replace('kernel-', '') }}
         --args='transparent_hugepage=never'"
      when: "system_kernel_setup_grub_hugepage | bool"
      changed_when: false

    - name: "Setup | Grubby for rd.auto"
      ansible.builtin.command: "grubby --update-kernel=/boot/vmlinuz-{{ _system_kernel_setup_latest_kernel | replace('kernel-', '') }} --args=rd.auto"
      when: "system_kernel_setup_grub_rdauto | bool"
      changed_when: false

...
