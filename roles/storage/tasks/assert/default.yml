---
- name: "Assert | Ensure __role_name is defined"
  ansible.builtin.assert:
    that:
      - __role_name is defined
      - __role_name is string
      - __role_name | length > 0
      # Make sure you can't forget to replace the role name
      - "__role_name != ['temp', 'late'] | join('')"

- name: "Assert | Definitions for Setup"
  when: __role_name == "setup"
  block:
    - name: "Assert | Test system_storage_setup_default_fstype"
      ansible.builtin.assert:
        that:
          - system_storage_setup_default_fstype is defined
          - system_storage_setup_default_fstype is string
          - system_storage_setup_default_fstype in [ "btrfs", "cramfs", "ext2", "ext3", "ext4", "fat", "msdos", "ntfs", "vfat", "xfs" ]
        quiet: true

    - name: "Assert | Test system_storage_setup_partitions"
      ansible.builtin.assert:
        that:
          - system_storage_setup_partitions is iterable
        quiet: true
      when:
        - system_storage_setup_partitions is defined

    - name: "Assert | Test system_storage_setup_partitions.name"
      ansible.builtin.assert:
        that:
          - item.name is defined
          - item.name is string
          - item.name is not none
        quiet: true
      loop: "{{ system_storage_setup_partitions }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_partitions is defined

    - name: "Assert | Test system_storage_setup_partitions.number"
      ansible.builtin.assert:
        that:
          - item.number is defined
          - item.number is number
          - item.number > 0
        quiet: true
      loop: "{{ system_storage_setup_partitions }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_partitions is defined

    - name: "Assert | Test system_storage_setup_partitions.part_end"
      ansible.builtin.assert:
        that:
          - item.part_end is defined
          - item.part_end is string
          - item.part_end is not none
        quiet: true
      loop: "{{ system_storage_setup_partitions }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_partitions is defined

    - name: "Assert | Test system_storage_setup_volumegroups"
      ansible.builtin.assert:
        that:
          - system_storage_setup_volumegroups is iterable
        quiet: true
      when:
        - system_storage_setup_volumegroups is defined

    - name: "Assert | Test system_storage_setup_volumegroups.name"
      ansible.builtin.assert:
        that:
          - item.name is defined
          - item.name is string
          - item.name is not none
        quiet: true
      loop: "{{ system_storage_setup_volumegroups }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_volumegroups is defined

    - name: "Assert | Test system_storage_setup_volumegroups.devices"
      ansible.builtin.assert:
        that:
          - item.devices is defined
          - item.devices is iterable
        quiet: true
      loop: "{{ system_storage_setup_volumegroups }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_volumegroups is defined

    - name: "Assert | Test system_storage_setup_volumegroups.size"
      ansible.builtin.assert:
        that:
          - item.size is number
        quiet: true
      loop: "{{ system_storage_setup_volumegroups }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_volumegroups is defined
        - item.size is defined

    - name: "Assert | Test system_storage_setup_volumes"
      ansible.builtin.assert:
        that:
          - system_storage_setup_volumes is iterable
        quiet: true
      when:
        - system_storage_setup_volumes is defined

    - name: "Assert | Test system_storage_setup_volumes.name"
      ansible.builtin.assert:
        that:
          - item.name is defined
          - item.name is string
          - item.name is not none
        quiet: true
      loop: "{{ system_storage_setup_volumes }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_volumes is defined

    - name: "Assert | Test system_storage_setup_volumes.vg"
      ansible.builtin.assert:
        that:
          - item.vg is defined
          - item.vg is string
          - item.vg is not none
        quiet: true
      loop: "{{ system_storage_setup_volumes }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_volumes is defined

    - name: "Assert | Test system_storage_setup_volumes.size"
      ansible.builtin.assert:
        that:
          - item.size is defined
        quiet: true
      loop: "{{ system_storage_setup_volumes }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_volumes is defined

    - name: "Assert | Test system_storage_setup_filesystems"
      ansible.builtin.assert:
        that:
          - system_storage_setup_filesystems is iterable
        quiet: true
      when:
        - system_storage_setup_filesystems is defined

    - name: "Assert | Test system_storage_setup_filesystems.name"
      ansible.builtin.assert:
        that:
          - item.name is defined
          - item.name is string
          - item.name is not none
        quiet: true
      loop: "{{ system_storage_setup_filesystems }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_filesystems is defined

    - name: "Assert | Test system_storage_setup_default_fstype"
      ansible.builtin.assert:
        that:
          - system_storage_setup_default_fstype is defined
          - system_storage_setup_default_fstype is string
          - system_storage_setup_default_fstype in [ "btrfs", "cramfs", "ext2", "ext3", "ext4", "fat", "msdos", "ntfs", "vfat", "xfs" ]

    - name: "Assert | Test system_storage_setup_filesystems.fstype"
      ansible.builtin.assert:
        that:
          - item.fstype is defined
          - item.fstype is string
        quiet: true
      loop: "{{ system_storage_setup_filesystems }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_filesystems is defined

    - name: "Assert | Test system_storage_setup_mounts"
      ansible.builtin.assert:
        that:
          - system_storage_setup_mounts is iterable
        quiet: true
      when:
        - system_storage_setup_mounts is defined

    - name: "Assert | Test system_storage_setup_mounts.name"
      ansible.builtin.assert:
        that:
          - item.name is defined
          - item.name is string
          - item.name is not none
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined

    - name: "Assert | Test system_storage_setup_mounts.src"
      ansible.builtin.assert:
        that:
          - item.src is defined
          - item.src is string
          - item.src is not none
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined

    - name: "Assert | Test system_storage_setup_mounts.owner"
      ansible.builtin.assert:
        that:
          - item.owner is defined
          - item.owner is string
          - item.owner is not none
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined

    - name: "Assert | Test system_storage_setup_mounts.group"
      ansible.builtin.assert:
        that:
          - item.group is defined
          - item.group is string
          - item.group is not none
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined

    - name: "Assert | Test system_storage_setup_mounts.mode"
      ansible.builtin.assert:
        that:
          - item.mode is defined
          - item.mode is string
          - item.mode is not none
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined

    - name: "Assert | Test system_storage_setup_mounts.opts"
      ansible.builtin.assert:
        that:
          - item.opts is string
          - item.opts is not none
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined
        - item.opts is defined

    - name: "Assert | Test system_storage_setup_mounts.boot"
      ansible.builtin.assert:
        that:
          - item.boot is boolean
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined
        - item.boot is defined

    - name: "Assert | Test system_storage_setup_mounts.dump"
      ansible.builtin.assert:
        that:
          - item.dump is number
          - item.dump in [0, 1]
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined
        - item.dump is defined

    - name: "Assert | Test system_storage_setup_mounts.passno"
      ansible.builtin.assert:
        that:
          - item.passno is number
          - item.passno in [0, 1, 2]
        quiet: true
      loop: "{{ system_storage_setup_mounts }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - system_storage_setup_mounts is defined
        - item.passno is defined

...
