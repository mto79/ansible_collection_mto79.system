---
- name: "Main | Ensure ansible_facts used by role"
  ansible.builtin.setup:
    gather_subset: min
  when: not ansible_facts.keys() | list |
    intersect(__role_required_facts) == __role_required_facts

- name: "Main | Set platform/version specific variables"
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', find_vars) }}"
  vars:
    find_vars:
      files: "{{ __role_file_search_order }}"
      skip: true
      paths:
        - "vars"

- name: "Main | Assert platform/version specific variables"
  ansible.builtin.include_tasks: "{{ lookup('ansible.builtin.first_found', find_asserts) }}"
  vars:
    find_asserts:
      files: "{{ __role_file_search_order }}"
      skip: true
      paths:
        - "assert"

- name: "Main | platform/version specific playbooks"
  ansible.builtin.include_tasks: "{{ __role_found_tasks }}"
  vars:
    __role_find_tasks:
      files: "{{ __role_file_search_order }}"
      skip: true
      paths: ["tasks/{{ __role_action_task }}"]
    __role_found_tasks: "{{ lookup('ansible.builtin.first_found', __role_find_tasks) }}"
  when: __role_found_tasks | length > 0
  loop: "{{ [__role_action | default('setup')] | flatten }}"
  loop_control:
    loop_var: __role_action_task

# Sometimes needed when the same tasks must be ran on every host in parallel
- name: "Main | tasks that always run"
  ansible.builtin.include_tasks: "{{ __role_found_tasks }}"
  vars:
    __role_find_tasks:
      files: ["always.yml"]
      skip: true
      paths: ["tasks/{{ __role_action_task }}"]
    __role_found_tasks: "{{ lookup('ansible.builtin.first_found', __role_find_tasks) }}"
  when: __role_found_tasks | length > 0
  loop: "{{ [__role_action | default('setup')] | flatten }}"
  loop_control:
    loop_var: __role_action_task

...
